@page "/ModifierLog"
@inject Popper Popper

<span class="reference" @ref=reference aria-describedby="tooltip" value="My Button">Reference</span>
<span class="popper" @ref=tooltip role="tooltip">Popper</span>
<br />
<textarea style="width:100%;height:200px;">
@log
</textarea>

@code {
    protected ElementReference reference;

    protected ElementReference tooltip;

    protected string log = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Options options = new()
            {
                Placement = Placement.Right,
                Modifiers = new Modifier[]
                {
                new Modifier("Logger", true, ModifierPhases.Main, (ModifierArguments modifierArguments) => { log += System.Text.Json.JsonSerializer.Serialize(modifierArguments) + '\n'; StateHasChanged(); return null; })
                }
            };
            await Popper.CreatePopperAsync(reference, tooltip, options);
        }
    }
}